in
in
in
pop cx
pop bx
pop ax;input_coefficients_of_square_equation
push 0
push ax
je 100:;calling_line_(a=0)_case
push 0
push bx
je 010:;calling_case_with_b=0
push 0
push cx
je 001:;calling_case_with_c=0
push bx
push bx
mul
push cx
push ax
push 4
mul
mul
sub
pop dx;counting_D
push bx
push -1
mul
push dx
sqrt
add
push ax
push 2
mul
div
out;counting_default_the_first_root
push bx
push -1
mul
push dx
sqrt
sub
push ax
push 2
mul
div
out
hlt;counting_default_the_second_root
001:
    push 0
    out;one_root_is_always_0
    push bx
    pop cx
    push ax
    pop bx
    call 100:;second_root_is_a_line_case
    hlt
010:
    push -1
    push cx
    mul
    push ax
    div
    sqrt
    out;extract_the_sqrt_of_c_so_the_first_root_is_sqrt(c)
    push -1
    push cx
    mul
    push ax
    div
    sqrt
    push -1
    mul
    out;second_root_i_s
    hlt
666:
    push -666
    out
    hlt
100:
    push -1
    push cx
    mul
    push bx;_-c_/_b_=_x
    div
    out
    hlt
